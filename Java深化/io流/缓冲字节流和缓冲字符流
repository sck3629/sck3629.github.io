**1.缓冲字节流**

BufferedInputStream 和 BufferedOutputStream 是处理流（包装流） 

1) 读文件和写文件都使用了缓冲区，减少了读写次数，从而 提高了效率 

2) 当创建这两个缓冲流的对象时时，会创建了内部缓冲数组， 缺省使用 32 字节大小的缓冲区. 

3) 当读取数据时，数据按块读入缓冲区，其后的读操作则直 接访问缓冲区 

4) 当写入数据时，首先写入缓冲区，当缓冲区满时，其中的 数据写入所连接的输出流。使用方法 flush()可以强制将缓冲区的内容全部写入输出流 

5) 关闭流的顺序和打开流的顺序相反，只要关闭高层流即可，关闭高层流其实关闭的底层节点流 

6) Flush 的使用：手动将 buffer 中内容写入文件

**2.缓冲字符流**

**BufferedReader** 

readLine() 读取一个文本行的数据 

**BufferedWriter** 

newLine()；写入一个行分隔符(换行)。 

#### 使用缓冲字符流是复制文本文件常用的方式

#### 使用缓冲字节流是复制非文本文件（视频/图片等等）常用的方式

