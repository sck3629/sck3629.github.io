package com.bjsxt.test;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class Test2 {
   public static void test1(){
	   Object obj = new Object();
	   long start = System.currentTimeMillis();
	   for(int i = 0; i < 1000000000; i++){
		   obj.hashCode();
	   }
	   long end = System.currentTimeMillis();
	   System.out.println("共耗时" + (end-start) + "毫秒");
   }
   public static void test2() throws NoSuchMethodException, SecurityException, IllegalAccessException, IllegalArgumentException, InvocationTargetException{
	   Object obj = new Object();
	   Class c = obj.getClass();
	   long start = System.currentTimeMillis();
	   Method m = c.getMethod("hashCode", null);
	   for(int i = 0; i < 1000000000; i++){
	      m.invoke(obj, null);
	   }
	   long end = System.currentTimeMillis();
	   System.out.println("共耗时" + (end-start) + "毫秒");
   }
   public static void test3() throws NoSuchMethodException, SecurityException, IllegalAccessException, IllegalArgumentException, InvocationTargetException{
	   Object obj = new Object();
	   Class c = obj.getClass();
	   long start = System.currentTimeMillis();
	   Method m = c.getMethod("hashCode", null);
	   **m.setAccessible(true);//不执行安全检查，耗时少，即提高了反射效率**
	   for(int i = 0; i < 1000000000; i++){
	      m.invoke(obj, null);
	   }
	   long end = System.currentTimeMillis();
	   System.out.println("共耗时" + (end-start) + "毫秒");
   }
   public static void main(String[] args) throws NoSuchMethodException, SecurityException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
	test1();
	test2();
	test3();
	
}
}