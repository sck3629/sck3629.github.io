<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:element name="books">
       <xs:complexType>
            <xs:sequence>
               <xs:element name="book" maxOccurs="unbounded">
                   <xs:complexType>
                      <xs:sequence>
                        <xs:element name="name" type="xs:string"></xs:element>
                        <xs:element name="author" type="xs:string"></xs:element>
                        <xs:element name="price" type="xs:double"></xs:element>
                      </xs:sequence>
                      <xs:attribute name="id" type="xs:positiveInteger" use="required"></xs:attribute>
                   </xs:complexType>
               </xs:element>
            </xs:sequence>
       </xs:complexType>
   </xs:element>
</xs:schema>

 







<?xml version="1.0" encoding="UTF-8"?>
<books xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="{book.xsd}">
	<book id="111">
		<name>java实战</name>
		<author>zhangshan</author>
		<price>34</price>
	</book>
	<book id="222">
		<name>python实战</name>
		<author>lisi</author>
		<price>44.5</price>
	</book>
</books>

   







package xmlProject;

import java.io.File;
import java.io.IOException;

import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;

import org.xml.sax.SAXException;

public class Test {
   public static void main(String[] args) throws SAXException {
   **//1.创建SchemaFactory工厂**
	   SchemaFactory sch = SchemaFactory.newInstance("http://www.w3.org/2001/XMLSchema");
   **//2.建立验证文件对象**
	   File schemaFile = new File("book.xsd");
   **//3.利用SchemaFactory工厂对象，接收验证文件的对象，生成Schema对象**
	   Schema schema = sch.newSchema(schemaFile);
   **//4.产生对此Schema的验证器**
	   Validator validator = schema.newValidator();
   **//5.要验证的数据，(准备数据源)**
	   Source source = new StreamSource("book.xml");
   **//6.开始验证**
	   try {
		validator.validate(source);
		System.out.println("成功");
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		System.out.println("失败");
	}
}
}