package com.bjsxt.test;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
**import org.junit.Test;**

import com.bjsxt.pojo.User;
public class TestMybatis {
  **@Test**
  public void testSelAll() throws IOException{
	**//1.加载mybatis核心配置文件**
	 InputStream in = Resources.getResourceAsStream("mybatis.xml");
	**//2.构建SqlSessionFactory对象**
	 SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(in);
	**//3.通过工厂打开SqlSession对象**
	 SqlSession session = factory.openSession();
	**//4.通过session执行查询操作**
	 List<User> list = session.selectList("com.bjsxt.mapper.UserMapper.selAll");
	 for (User user : list) {
		System.out.println(user);
	}
	 //System.out.println(list.get(0));
	**//5.关闭资源**
	 session.close();
  }
}







package com.bjsxt.pojo;

public class User {
  @Override
	public String toString() {
		return "User [id=" + id + ", username=" + username + ", password="
				+ password + "]";
	}
private int id;
    private String username;
    private String password;
public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + id;
	result = prime * result + ((password == null) ? 0 : password.hashCode());
	result = prime * result + ((username == null) ? 0 : username.hashCode());
	return result;
}
public User() {
	super();
	// TODO Auto-generated constructor stub
}
public User(int id, String username, String password) {
	super();
	this.id = id;
	this.username = username;
	this.password = password;
}
public int getId() {
	return id;
}
public void setId(int id) {
	this.id = id;
}
public String getUsername() {
	return username;
}
public void setUsername(String username) {
	this.username = username;
}
public String getPassword() {
	return password;
}
public void setPassword(String password) {
	this.password = password;
}
public boolean equals(Object obj) {
	if (this == obj)
		return true;
	if (obj == null)
		return false;
	if (getClass() != obj.getClass())
		return false;
	User other = (User) obj;
	if (id != other.id)
		return false;
	if (password == null) {
		if (other.password != null)
			return false;
	} else if (!password.equals(other.password))
		return false;
	if (username == null) {
		if (other.username != null)
			return false;
	} else if (!username.equals(other.username))
		return false;
	return true;
}
}